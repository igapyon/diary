<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML lang="ja">
<HEAD>
<TITLE>2007/05/10 ���L: Java: �T���v��: �g���v��DES �A���S���Y���ɂ��t�@�C���Í���</TITLE>
<META name="DESCRIPTION" content="Java�� �g���v��DES (Triple DES) �A���S���Y���ɂ��t�@�C���Í����c�[���̃g�C�v���O�������ȒP�ɍ���Ă݂܂����B">
<META name="KEYWORDS" content="DES,DESede,�g���v��DES,�Í���,Java,JSSE,JCA">
<META name="GENERATOR" content="IBM WebSphere Studio Homepage Builder Version 11.0.0.0 for Windows">
<META name="DATE" content="2010-09-27T20:42:50+09:00">
<META http-equiv="Content-Type" content="text/html; charset=Shift_JIS">
<META http-equiv="Content-Style-Type" content="text/css">
<LINK rel="INDEX" href="index.html">
<LINK rel="CONTENTS" href="index.html">
<LINK rel="stylesheet" href="../../css/table.css" type="text/css" id="_HPB_TABLE_CSS_ID_">
</HEAD>
<BODY bgcolor="#eeddcc">
<TABLE border="0"><TBODY><TR>
  <TD valign="top">
    <A href="../memo/memoigapyon.html">
      <IMG src="../../image/iga200306s.jpg" border="0" ALT="�����҂��摜(��) 2003/06">
    </A>
  </TD>
  <TD valign="top">
    <H2>2007/05/10 ���L: Java: �T���v��: �g���v��DES �A���S���Y���ɂ��t�@�C���Í���</H2>
    <P>[DES,DESede,�g���v��DES,�Í���,Java,JSSE,JCA] Java�� �g���v��DES (Triple DES) �A���S���Y���ɂ��t�@�C���Í����c�[���̃g�C�v���O�������ȒP�ɍ���Ă݂܂����B</P>
  </TD>
</TR></TBODY></TABLE>

<!-- adv -->
<CENTER>
<TABLE bgcolor="#ffff00" summary="adv">
  <TBODY>
    <TR>

      <TD align="center">�L��: <A href="http://journal.mycom.co.jp/column/ide/091/">�C�}�h�L��IDE����: Eclipse�x�[�X�̓����|����uBenten�v���g���Ă݂悤</A> <FONT color="#ff0000" size="-1">09/27</FONT><BR>
        <FONT size="-1">������������̎�ɂ�� Benten �Љ�L��!</FONT></TD>

    </TR>
  </TBODY>
</TABLE>
</CENTER>
<!-- adv -->




<P> </P>

<DIV align="right">
<TABLE cellpadding="4">
  <TBODY>
    <TR bgcolor="#99ccff">
      <TD><A href="../idxall.html">�C���f�B�b�N�X�y�[�W�֖߂�</A></TD>
    </TR>
  </TBODY>
</TABLE>
</DIV>



<TABLE summary="mini title">
  <TBODY>
    <TR>
      <TD bgcolor="#ff9900" valign="top"><FONT color="#ffffff" size="+1"><STRONG>Java: �T���v��: �g���v��DES �A���S���Y���ɂ��t�@�C���Í���</STRONG></FONT></TD>
    </TR>
  </TBODY>
</TABLE>
<P>Java�� �g���v��DES (Triple DES) �A���S���Y���ɂ��t�@�C���Í����c�[���̃g�C�v���O�������ȒP�ɍ���Ă݂܂����B����̃\�[�X�R�[�h���������Ă����܂��B</P>
<P>�|�C���g</P>
<UL>
  <LI>JDK 5.0 ��API�݂̂ō\��
  <LI>�Í������� SHA-256�_�C�W�F�X�g�l�ō쐬<BR>
  �Z���Í������̎�̎����͂����Ƃ��Ă��A�_�C�W�F�X�g�l�̗p�ɂ���ď\���ȃr�b�g���𓾂邱�Ƃ��o���܂��B
  <LI>�p�X���[�h���Ԉ�����ꍇ�ɂ�<STRONG>���x���Ő���I��</STRONG><BR>
  ������ɂ��p�X���[�h�N���b�N�̃��X�N��ጸ�����邽�߂ɕK�v�Ȃ��Ƃ��Ǝ��͍l���܂����B
  <LI>�g���v��DES�A���S���Y���̗p<BR>
  AES�� Java 6�ȍ~�ł̒񋟂ɂȂ��Ă��܂��BJDK 5.0���S���̌���ł� �g���v��DES�A���S���Y���̗̍p���Ó��ƍl���܂����B
  <LI>TODO: �t�@�C�������ɑ��݂���Ƃ��̕������ɂ��āA���݂͋��s����悤�ɂȂ��Ă��܂��B<BR>
  ����́A�ُ�I�������Ƃ���̂��ǂ��������ꂢ�܂���B
</UL>
<BLOCKQUOTE>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD bgcolor="#ffff00">BlancoDesede.java</TD>
    </TR>
  </TBODY>
</TABLE>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD><pre>/**
 * �g���v��DES (Triple DES) �A���S���Y���ɂ��t�@�C���Í����c�[���B
 */
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.InvalidKeyException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;

import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESedeKeySpec;

/**
 * �g���v��DES (Triple DES) �A���S���Y���ɂ��t�@�C���Í����c�[���B
 * 
 * �t�@�C���̊g���q�ɂ��A�Í����^�������̔��f�������Ȃ��悤�ɂȂ��Ă��܂��B
 * 
 * @author �ɉ�q��
 * @version 2007.05.10
 */
public class BlancoDesede {
    /**
     * ���p����A���S���Y���B
     */
    private static final String ALGORITHM = &quot;DESede&quot;;

    /**
     * �Í�����̃t�@�C���ɕt�^����镶����B
     */
    private static final String ENCRYPTED_FILE_EXT = &quot;.blancodesede&quot;;

    private static final String KEY_DIGEST_ALGORITHM = &quot;SHA-256&quot;;

    /**
     * �p�X���[�h�B�ꎞ�I�ɋL�����Ă������߂ɂ��̃t�B�[���h�ϐ��𗘗p���܂��B
     */
    private String fPass = null;

    /**
     * �p�X���[�h��ݒ肵�܂��B
     * 
     * @param argPass
     */
    public void setPass(final String argPass) {
        fPass = argPass;
    }

    /**
     * ���̃c�[���̎g���������ł��B
     */
    private static final void usage() {
        System.out.println(&quot;Usage:&quot;);
        System.out.println(&quot;  �Í���: java BlancoDesede ���̓t�@�C�� password&quot;);
        System.out.println(&quot;  ������: java BlancoDesede ���̓t�@�C��&quot;
                + ENCRYPTED_FILE_EXT + &quot; password&quot;);
        System.out.println(&quot;���t�@�C�����ɂ͋󔒂��܂܂Ȃ��悤�ɂ��Ă��������B&quot;);
        System.out.println(&quot;���g���q�� [&quot; + ENCRYPTED_FILE_EXT + &quot;]&quot;
                + &quot; �̏ꍇ�ɂ͕��������[�h�Ɣ��f���܂��B&quot;);
    }

    /**
     * ���̃N���X�̃G���g���|�C���g�B
     * 
     * @param args
     */
    public static void main(final String[] args) {
        if (args.length &lt; 2) {
            // �����̐�������܂���B
            usage();
            return;
        }

        final BlancoDesede angou = new BlancoDesede();
        angou.setPass(args[1]);

        final String inFileName = args[0];

        System.out.println(&quot;�t�@�C�����������܂��B����[&quot; + inFileName + &quot;]&quot;);

        if (new File(inFileName).exists() == false) {
            System.out.println(&quot;�w��̃t�@�C��[&quot; + inFileName + &quot;]�͌�����܂���B�������f���܂��B&quot;);
            return;
        }

        try {
            if (inFileName.endsWith(ENCRYPTED_FILE_EXT) == false) {
                System.out.println(&quot;  ���[�h:�Í���&quot;);
                angou.encrypt(new File(inFileName), new File(inFileName
                        + ENCRYPTED_FILE_EXT));
            } else {
                System.out.println(&quot;  ���[�h:������&quot;);
                angou.decrypt(new File(inFileName), new File(inFileName
                        .substring(0, inFileName.length()
                                - ENCRYPTED_FILE_EXT.length())));
            }

            System.out.println(&quot;���������B&quot;);
        } catch (IOException e) {
            System.out.println(&quot;���o�͗�O���������܂����B�������f���܂��B:&quot; + e.toString());
            e.printStackTrace();
        }
    }

    /**
     * �^����ꂽ����������Ƃɔ閧�����쐬���܂��B
     * 
     * @param strKey
     *            �閧���̎�ƂȂ镶����B
     * @return
     */
    private SecretKey getSecretKey(final String strKey) {
        // ���̎���_�C�W�F�X�g�����Č��Ƃ��ė��p���܂��B
        // �|�C���g: SHA-256��32�o�C�g����̂ŁADESede�ŕK�v�ƂȂ�24�o�C�g��蒷���̂œs�����ǂ��B
        final byte[] digestedKey;
        try {
            final MessageDigest msgDigest = MessageDigest
                    .getInstance(KEY_DIGEST_ALGORITHM);
            msgDigest.update(strKey.getBytes());
            digestedKey = msgDigest.digest();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�_�C�W�F�X�g[&quot; + KEY_DIGEST_ALGORITHM
                    + &quot;]�擾�Ɏ��s���܂����B:&quot; + e.toString());
        }

        // ���ۂɗ��p����L�[���쐬���܂��B
        final byte[] keySeed = new byte[24];
        for (int index = 0; index &lt; keySeed.length; index++) {
            keySeed[index] = digestedKey[index];
        }

        try {
            final SecretKeyFactory factory = SecretKeyFactory
                    .getInstance(ALGORITHM);
            return factory.generateSecret(new DESedeKeySpec(keySeed));
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�A���S���Y���̎擾�Ɏ��s���܂����B:&quot;
                    + e.toString());
        } catch (InvalidKeyException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�閧�����s���ł��B:&quot; + e.toString());
        } catch (InvalidKeySpecException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�閧���̎d�l���s���ł��B:&quot; + e.toString());
        }
    }

    /**
     * �Í����������Ȃ��܂��B
     * 
     * @param inFile
     * @param outFile
     * @throws IOException
     */
    private void encrypt(final File inFile, final File outFile)
            throws IOException {
        final Cipher cipher;
        try {
            final InputStream inStream = new BufferedInputStream(
                    new FileInputStream(inFile));

            cipher = Cipher.getInstance(ALGORITHM);
            cipher.init(Cipher.ENCRYPT_MODE, getSecretKey(fPass));

            final OutputStream outStream = new CipherOutputStream(
                    new BufferedOutputStream(new FileOutputStream(outFile)),
                    cipher);

            copy(inStream, outStream);

            outStream.flush();
            outStream.close();

            inStream.close();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�A���S���Y���̎擾�Ɏ��s���܂����B:&quot;
                    + e.toString());
        } catch (NoSuchPaddingException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�p�f�B���O�s���Ŏ��s���܂����B:&quot;
                    + e.toString());
        } catch (InvalidKeyException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�閧���s���Ŏ��s���܂����B:&quot; + e.toString());
        }
    }

    /**
     * ���������s���܂��B
     * 
     * @param inFile
     * @param outFile
     * @throws IOException
     */
    private void decrypt(final File inFile, final File outFile)
            throws IOException {
        try {
            final Cipher cipher = Cipher.getInstance(ALGORITHM);
            cipher.init(Cipher.DECRYPT_MODE, getSecretKey(fPass));
            final InputStream inStream = new CipherInputStream(
                    new BufferedInputStream(new FileInputStream(inFile)),
                    cipher);

            final OutputStream outStream = new BufferedOutputStream(
                    new FileOutputStream(outFile));

            copy(inStream, outStream);

            inStream.close();

            outStream.flush();
            outStream.close();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�A���S���Y���̎擾�Ɏ��s���܂����B:&quot;
                    + e.toString());
        } catch (NoSuchPaddingException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�p�f�B���O�s���Ŏ��s���܂����B:&quot;
                    + e.toString());
        } catch (InvalidKeyException e) {
            e.printStackTrace();
            throw new IllegalArgumentException(&quot;�閧���s���Ŏ��s���܂����B:&quot; + e.toString());
        }
    }

    /**
     * �X�g���[�����R�s�[���܂��B
     * 
     * @param inStream
     * @param outStream
     * @throws IOException
     */
    private void copy(final InputStream inStream, final OutputStream outStream)
            throws IOException {
        final byte[] byteBuf = new byte[1024];
        for (;;) {
            int length = inStream.read(byteBuf);
            if (length &lt;= 0) {
                break;
            }
            outStream.write(byteBuf, 0, length);
        }
    }
}</pre></TD>
    </TR>
  </TBODY>
</TABLE>
</BLOCKQUOTE>
<P><FONT color="#ff0000">2007.10.17�ǋL</FONT> ���̃\�[�X�R�https://www.igapyon.jp/www.igapyon.jp/blanco/blanco.ja.html" TITLE="blanco Framework �� �I�[�v���\�[�X�Œ񋟂���Ă��� blancoDb��blancoStruts�Ȃǂ̏W���̂ł��B��{�I�� Java�\�[https://www.igapyon.jp/ړI�Ƃ��܂��B">blanco Framework</A> �� <A HREF="http://www.igapyon.jp/blanco/blancodownload.html#blancoEncryption" TITLE="�Í����E���������ȒP�ɗ��p�ł���悤�ɂ��邽�߂�Java���C�u����(jar�t�@�C��)�ł��B
">blancoEncryption</A>
�ւƔ��W���܂����B</P>
<HR>
<address><A HREF="../memo/memoigapyon.html">�����҂��ɂ���</A><BR>
Last modified: $Date: 2010/09/27 20:42:50 $</address>
</BODY>
</HTML>
