<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML lang="ja">
<HEAD>
<TITLE>2002/08/23 日記: System.Data.SqlClientを直接使ったDB入出力サンプル</TITLE>
<META name="DESCRIPTION" content="Visual C# + ADO.NET: 低レベルデータベース入出力サンプルを書いてみる。">
<META name="KEYWORDS" content="いがぴょんの日記v2,diary,igapyon">
<META name="GENERATOR" content="IBM WebSphere Homepage Builder Version 6.0.4.0 for Windows">
<META name="DATE" content="[replace-metatext:timestamp]">
<META http-equiv="Content-Type" content="text/html; charset=Shift_JIS">
<META http-equiv="Content-Style-Type" content="text/css">
<LINK rel="INDEX" href="index.html">
<LINK rel="CONTENTS" href="index.html">
</HEAD>
<BODY bgcolor="#eeddcc">[replace-text:igdiaryhead.txt]
<TABLE summary="mini title">
  <TBODY>
    <TR>
      <TD bgcolor="#ff9900" valign="top"><FONT color="#ffffff" size="+1"><STRONG>Visual C# における JavaDocに該当する機能</STRONG></FONT></TD>
    </TR>
  </TBODY>
</TABLE>
<P>Visual Studio のメニューの中から</P>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD>ツール(T) → Webページのビルドコメント(B)...</TD>
    </TR>
  </TBODY>
</TABLE>
<P>を選ぶと コードコメントWebレポート なるものが生成されます。これが Java
における JavaDoc と同じようなものであるようです。<BR>
ただし どのようにコメントを入れたらよいのかは いまいち把握していません。<BR>
# コメントを /// のように 3つのスラッシュで開始するんだ、、、とか &lt;summary&gt;タグなどは
まあ一応 わかっているのですが。</P>
<TABLE summary="mini title">
  <TBODY>
    <TR>
      <TD bgcolor="#ff9900" valign="top"><FONT color="#ffffff" size="+1"><STRONG>Visual C# + ADO.NET: 低レベルデータベース入出力</STRONG></FONT></TD>
    </TR>
  </TBODY>
</TABLE>
<P>Visual C# の ASP.NETプロジェクトとして、aspnetプロジェクトを作成したとします。<BR>
http://サーバ名/aspnet/WebFormSimpleDb.aspx</P>
<P>ターゲットはSQLServer 2000 SP2 とします。</P>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD bgcolor="#ffff00">WebFormSimpleDb.aspx.cs</TD>
    </TR>
  </TBODY>
</TABLE>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD><pre>                /// &lt;summary&gt;
                /// CREATE TABLE文のサンプル
                /// &lt;/summary&gt;
                private void ButtonCreateTable_Click(object sender, System.EventArgs e)
                {
                        System.Data.SqlClient.SqlConnection conn = 
                                new System.Data.SqlClient.SqlConnection(
                                        &quot;server=iga-pc1;database=dbsample;UID=igapyon;PWD=pass&quot;);
                        try 
                        {
                                conn.Open();
                                System.Data.SqlClient.SqlCommand cmd = 
                                        new System.Data.SqlClient.SqlCommand(
                                                &quot;CREATE TABLE tblperson (username CHAR(16) NOT NULL, age INT NOT NULL,&quot;
                                                        +&quot; PRIMARY KEY(username))&quot;
                                                ,conn);
                                cmd.ExecuteNonQuery();
                                cmd.Dispose();
                        }
                        catch(System.Data.SqlClient.SqlException ex)
                        {
                                Session[&quot;状態&quot;] = &quot;失敗&quot; + ex.ToString();
                                Response.Redirect(&quot;WebFormSimpleDbResult.aspx&quot;,true);
                        }
                        finally
                        {
                                conn.Close();
                                conn.Dispose();
                        }
                        Session[&quot;状態&quot;] = &quot;成功&quot;;
                        Response.Redirect(&quot;WebFormSimpleDbResult.aspx&quot;,true);
                }

                /// &lt;summary&gt;
                /// DROP TABLE文のサンプル
                /// &lt;/summary&gt;
                private void ButtonDropTable_Click(object sender, System.EventArgs e)
                {
                        System.Data.SqlClient.SqlConnection conn = 
                                new System.Data.SqlClient.SqlConnection(
                                        &quot;server=iga-pc1;database=dbsample;UID=igapyon;PWD=pass&quot;);
                        try 
                        {
                                conn.Open();
                                System.Data.SqlClient.SqlCommand cmd = 
                                        new System.Data.SqlClient.SqlCommand(
                                                &quot;DROP TABLE tblperson&quot;
                                                ,conn);
                                cmd.ExecuteNonQuery();
                                cmd.Dispose();
                        }

                        catch(System.Data.SqlClient.SqlException ex)
                        {
                                Session[&quot;状態&quot;] = &quot;失敗&quot; + ex.ToString();
                                Response.Redirect(&quot;WebFormSimpleDbResult.aspx&quot;,true);
                        }
                        finally
                        {
                                conn.Close();
                                conn.Dispose();
                        }
                        Session[&quot;状態&quot;] = &quot;成功&quot;;
                        Response.Redirect(&quot;WebFormSimpleDbResult.aspx&quot;,true);
                }

                /// &lt;summary&gt;
                /// パラメータ無しINSERT文のサンプル
                /// &lt;/summary&gt;
                private void ButtonInsert_Click(object sender, System.EventArgs e)
                {
                        System.Data.SqlClient.SqlConnection conn = 
                                new System.Data.SqlClient.SqlConnection(
                                        &quot;server=iga-pc1;database=dbsample;UID=igapyon;PWD=pass&quot;);
                        try
                        {
                                conn.Open();
                                System.Data.SqlClient.SqlCommand cmd = 
                                        new System.Data.SqlClient.SqlCommand(
                                                &quot;INSERT INTO tblperson VALUES ('いがぴょん',34)&quot;
                                                ,conn);
                                cmd.ExecuteNonQuery();
                                cmd.Dispose();
                                conn.Dispose();
                        } 
                        catch(System.Data.SqlClient.SqlException ex)
                        {
                                Session[&quot;状態&quot;] = &quot;失敗&quot; + ex.ToString();
                                Response.Redirect(&quot;WebFormSimpleDbResult.aspx&quot;,true);
                        }
                        finally
                        {
                                conn.Close();
                                conn.Dispose();
                        }
                        Session[&quot;状態&quot;] = &quot;成功&quot;;
                        Response.Redirect(&quot;WebFormSimpleDbResult.aspx&quot;,true);
                }

                /// &lt;summary&gt;
                /// パラメータ付きINSERT文のサンプル
                /// &lt;/summary&gt;
                private void ButtonInsertParam_Click(object sender, System.EventArgs e)
                {
                        System.Data.SqlClient.SqlConnection conn = 
                                new System.Data.SqlClient.SqlConnection(
                                        &quot;server=iga-pc1;database=dbsample;UID=igapyon;PWD=pass&quot;);
                        try
                        {
                                conn.Open();
                                System.Data.SqlClient.SqlCommand cmd = 
                                        new System.Data.SqlClient.SqlCommand(
                                                &quot;INSERT INTO tblperson VALUES (@a, @b)&quot;
                                                ,conn);
                                cmd.Parameters.Add(
                                        new System.Data.SqlClient.SqlParameter(
                                                &quot;@a&quot;, System.Data.SqlDbType.Char, 16));
                                cmd.Parameters.Add(
                                        new System.Data.SqlClient.SqlParameter(
                                                &quot;@b&quot;, System.Data.SqlDbType.Int));
                                cmd.Parameters[&quot;@a&quot;].Value = &quot;うんぱあ&quot;;
                                cmd.Parameters[&quot;@b&quot;].Value = 24;
                                cmd.ExecuteNonQuery();
                                cmd.Dispose();
                                conn.Dispose();
                        } 
                        catch(System.Data.SqlClient.SqlException ex)
                        {
                                Session[&quot;状態&quot;] = &quot;失敗&quot; + ex.ToString();
                                Response.Redirect(&quot;WebFormSimpleDbResult.aspx&quot;,true);
                        }
                        finally
                        {
                                conn.Close();
                                conn.Dispose();
                        }
                        Session[&quot;状態&quot;] = &quot;成功&quot;;
                        Response.Redirect(&quot;WebFormSimpleDbResult.aspx&quot;,true);
                }
        }
</pre></TD>
    </TR>
  </TBODY>
</TABLE>
<P>C# って 例外を捕捉しなくてもコンパイルが通ってしまうのですね。これはJava言語に劣る点の一つです。(超初心者は
例外のcatch無しでもコンパイルが通る方が嬉しいでしょうけれども 少しでも熟練してきた場合には、例外捕捉無しでコンパイルが通ってしまうのは
生産性向上の妨げになります)<BR>
または 例によって コンパイラのスイッチ切り替えによって コンパイルエラーになるのかも知れませんが、いずれにしろ　これは
C#言語の欠点です。</P>
<P>あと コネクションやコマンドをクローズする仕方について まだ調査しきれていません。</P>
<P>ちなみに ソースファイルが ANSI C 風になっていますが、これは Visual Studio
の コードエディタが 勝手にインデントした結果です。う〜む、JavaのCodeConvに慣れてきたところなので
ANSI C 風のインデントが気になってしょうがありません (苦笑)</P>
<P><STRONG><FONT color="#ff00ff">関連する日記</FONT></STRONG></P>
<UL>
  <LI><A href="ig020821.html">2002/08/21 日記: Visual C# + ASP.NET: 画面遷移およびセッションへの文字列の記憶</A>
  <LI><A href="ig021030.html">2002/10/30 日記: Eclipse続報</A>
</UL>
[replace-param:htmlstyle=tabletitle][replace-rdf:ig020823-news.xml]
[replace-text:igdiarytail.txt]</BODY>
</HTML>
