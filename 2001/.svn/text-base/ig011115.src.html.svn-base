<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML lang="ja">
<HEAD>
<TITLE>2001/11/15 日記: J2SE 1.3.1_01aを使い始めました</TITLE>
<META name="DESCRIPTION" content="J2SE 1.3.1_01aにアップグレード , 別件ですが、HotSpotの 予想以上の最適化機能に驚く…">
<META name="KEYWORDS" content="いがぴょんの日記v2,diary,igapyon">
<META name="GENERATOR" content="IBM WebSphere Homepage Builder Version 6.0.4.0 for Windows">
<META name="DATE" content="[replace-metatext:timestamp]">
<META http-equiv="Content-Type" content="text/html; charset=Shift_JIS">
<META http-equiv="Content-Style-Type" content="text/css">
<LINK rel="INDEX" href="index.html">
<LINK rel="CONTENTS" href="index.html">
</HEAD>
<BODY bgcolor="#eeddcc">[replace-text:igdiaryhead.txt]
<TABLE summary="mini title">
  <TBODY>
    <TR>
      <TD bgcolor="#ff9900" valign="top"><FONT color="#ffffff" size="+1"><STRONG>最近 SUN Java2 SDK SE 1.3.1_01aを使い始めました</STRONG></FONT></TD>
    </TR>
  </TBODY>
</TABLE>
<P>1.3.1_01 を使っていたのを 1.3.1_01aに乗り換えてみました。<BR>
スループット周りの強化とか コンソール画面のメモリリークバグ修正 (嫌な内容です)
とかに惹かれて 使い始めました。… 特に問題は出ていません。そこそこ気に入り始めました。</P>
<P>気になった点は、セットアップに従っていってインストールすると <STRONG>IEのJavaVMを置き換え</STRONG>るという 画期的な機能が付属している事です。これは便利 (笑) これで 古くて使い物にならない
Microsoft製 JavaVMを 『簡単に』最新版 JavaVMに置き換えることが可能になります。(IEの詳細設定タブに統合されている点も
結構気に入りました) …ただし これにより JavaVMの起動速度は低下してしまう模様です。Javaアプレット搭載ページを開くと
タスクトレイ右下に コーヒーカップアイコンが表示されます。これの起動に ちと時間がかかっている模様。NetscapeでJavaVM起動するときと同じ挙動です。<BR>
もっと気になったのは Javaアプレットなページを複数のIEで開くと その数だけ
コーヒーカップアイコンが追加されて表示される点です。こ…これは どういう意味なんだろう。タスクマネージャで見ると
IEって 窓の数だけプロセスが起動されるんですね。今 初めて知りました。なるほど
そして その数だけ JavaVMもロードされる模様です。(ただし プロセスとしては
IEの中というカウントである模様) これは メモリ搭載量の少ないパソコンでIEを使っている環境において
JavaVM更新をかけると、ひどいことが起こりかねないという事を意味しています。古くて使い物にならないJavaVMを
最新の版で置き換える事そのものは 大変素晴らしいことなのですけれども、副作用が起きないよう注意することも肝要ですね。</P>
<TABLE summary="mini title">
  <TBODY>
    <TR>
      <TD bgcolor="#ff9900" valign="top"><FONT color="#ffffff" size="+1"><STRONG>Java言語パフォーマンスネタ: 消えるコード</STRONG></FONT></TD>
    </TR>
  </TBODY>
</TABLE>
<P>いわゆるデバッグ用コードの実行速度を計測するために 下記のようなコードを書いてみました。<BR>
Windows 2000上で SUN Java2 SDK SE 1.3.1_01a 国際化版 (J2SE 1.3.1_01a) で
HotSpotありで実行しました。<BR>
ところがどっこい、あんまり差異が出ません。これが HotSpotの実力か？</P>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD><PRE>/**
 * 速度計測サンプル
 */
public class Sample
{
        public static final int LOOP_COUNT=100000000;

        public static void main(String[] args)
        {
                new Sample().process();
        }

        protected void process()
        {
                System.out.println(&quot;いわゆるデバッグ用コードの実行速度計測.&quot;);
                long lStart=System.currentTimeMillis();
                for(int iLoop=0;iLoop&lt;LOOP_COUNT;iLoop++)
                {
                        // ここを変更する。
                        // 計測数値は Celleron 300MHz
                        //sample1();//4.547秒
                        //sample2();//4.707秒
                        //sample3();//4.567秒
                        //sample4();//4.747秒
                        //sample5();//4.717秒
                        //sample6();//4.747秒
                        sample7();//8.121秒
                }
                long lEnd=System.currentTimeMillis();
                java.text.DecimalFormat decFormat=new java.text.DecimalFormat(&quot;#,##0.000&quot;);
                System.out.println(decFormat.format(((double)lEnd-lStart)/1000)+&quot;秒&quot;);
        }

        /**
         * 全くのコメント
         */
        public void sample1()
        {
                // System.out.println(&quot;なにかデバッグ文字列&quot;);
        }

        public void sample2()
        {
                if(false)System.out.println(&quot;なにかデバッグ文字列&quot;);
        }

        public static final boolean IS_DEBUG3=false;

        public void sample3()
        {
                if(IS_DEBUG3)System.out.println(&quot;なにかデバッグ文字列&quot;);
        }

        public boolean IS_DEBUG4=false;

        public void sample4()
        {
                if(IS_DEBUG4)System.out.println(&quot;なにかデバッグ文字列&quot;);
        }

        public boolean IS_DEBUG5=false;

        private boolean getIsDebug5()
        {
                return IS_DEBUG5;
        }

        public void sample5()
        {
                if(getIsDebug5())System.out.println(&quot;なにかデバッグ文字列&quot;);
        }

        public boolean IS_DEBUG6=false;

        private boolean getIsDebug6()
        {
                return IS_DEBUG6;
        }

        public void sample6()
        {
                if(getIsDebug6())System.out.println(&quot;なにか&quot;+&quot;デバッグ&quot;+&quot;文字列&quot;);
        }

        public boolean IS_DEBUG7=false;

        private boolean getIsDebug7()
        {
                return IS_DEBUG7;
        }

        public void debug7(String strMsg)
        {
                if(getIsDebug7())System.out.println(strMsg);
        }

        public void sample7()
        {
                debug7(&quot;なにか&quot;+&quot;デバッグ&quot;+&quot;文字列&quot;);
        }

}</PRE></TD>
    </TR>
  </TBODY>
</TABLE>
<P>HotSpot最適化範囲がここまでとは思えませんが…。なぜなのだろう。<BR>
*.class(バイトコード)を逆アセンブルしてみようかとも思いましたが、とりあえず時間が無いのと
どれが気の利いた バイトコード・リバースツールかを知らないので、とりあえず割愛しました。愛用バイトコード・リバースツールなどありましたら、どなたか
一言 ツッコミを入れて下さい。</P>
<P><FONT color="#ff0000">21:30</FONT> ループの回数が根本的に少なすぎたという事に気づきました。ループ回数を大幅アップしました。<BR>
そうすると 多少特徴が出てきました。なるほど、感慨深い数値だなぁ。(sample7以外は
ほとんど同数値なんです。意外だったです。)</P>
<TABLE summary="mini title">
  <TBODY>
    <TR>
      <TD bgcolor="#ff9900" valign="top"><FONT color="#ffffff" size="+1"><STRONG>typo</STRONG></FONT></TD>
    </TR>
  </TBODY>
</TABLE>
<P><FONT color="#ff0000">2001/11/16</FONT> [replace-link:結城浩]<FONT color="#ff00ff">さまから誤植ツッコミ</FONT><BR>
<CITE>Subject: typo<BR>
結城です。取り急ぎtypoです。</CITE></P>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD><CITE>s/パーフォマンスネタ/パフォーマンス/<BR>
      s/かつで飛ぶ取り落とす/かつて飛ぶ鳥落とす/<BR>
      s/是非 共通かに/是非 共通化に/</CITE></TD>
    </TR>
  </TBODY>
</TABLE>
<P><CITE>----<BR>
[replace-link:結城浩]</CITE></P>
<P><FONT color="#ff00ff"><STRONG>ここから</STRONG></FONT>[replace-link:いがぴょん]<BR>
どうもありがとうございます。大変嬉しいです。さっそく修正いたしました。<BR>
それにしても 沢山間違え過ぎだなぁ (苦笑)</P>
[replace-param:htmlstyle=tabletitle][replace-rdf:ig011115-news.xml]
[replace-text:igdiarytail.txt]</BODY>
</HTML>
